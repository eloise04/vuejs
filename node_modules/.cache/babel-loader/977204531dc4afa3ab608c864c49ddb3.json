{"remainingRequest":"C:\\Users\\Eloïse\\Documents\\Projet 2019-2020\\vuejsdashboard\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Eloïse\\Documents\\Projet 2019-2020\\vuejsdashboard\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Eloïse\\Documents\\Projet 2019-2020\\vuejsdashboard\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Eloïse\\Documents\\Projet 2019-2020\\vuejsdashboard\\src\\components\\MyModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Eloïse\\Documents\\Projet 2019-2020\\vuejsdashboard\\src\\components\\MyModal.vue","mtime":1578422094384},{"path":"C:\\Users\\Eloïse\\Documents\\Projet 2019-2020\\vuejsdashboard\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Eloïse\\Documents\\Projet 2019-2020\\vuejsdashboard\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Eloïse\\Documents\\Projet 2019-2020\\vuejsdashboard\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Eloïse\\Documents\\Projet 2019-2020\\vuejsdashboard\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: \"display\",\n  components: {},\n  props: {\n    msg: String,\n    reload: Boolean\n  },\n  data: function data() {\n    return {\n      oui: \"oui\"\n    };\n  },\n  methods: {\n    showModal: function showModal() {\n      this.$refs['my-modal'].show();\n    },\n    hideModal: function hideModal() {\n      this.$refs['my-modal'].hide();\n    },\n    toggleModal: function toggleModal() {\n      // We pass the ID of the button that we want to return focus to\n      // when the modal has hidden\n      this.$refs['my-modal'].toggle('#toggle-btn');\n    },\n    toggleInfoWindow: function toggleInfoWindow(marker, idx) {\n      this.infoWindowPos = marker.position;\n      this.infoOptions.content = marker.infoText;\n\n      if (this.currentMidx == idx) {\n        this.infoWinOpen = !this.infoWinOpen;\n      } else {\n        this.infoWinOpen = true;\n        this.currentMidx = idx;\n      }\n    }\n  }\n};",{"version":3,"sources":["MyModal.vue"],"names":[],"mappings":";;;;;;;;;;;;;AAgBA,eAAA;AACA,EAAA,IAAA,EAAA,SADA;AAEA,EAAA,UAAA,EAAA,EAFA;AAGA,EAAA,KAAA,EAAA;AACA,IAAA,GAAA,EAAA,MADA;AAEA,IAAA,MAAA,EAAA;AAFA,GAHA;AAOA,EAAA,IAPA,kBAOA;AAEA,WAAA;AACA,MAAA,GAAA,EAAA;AADA,KAAA;AAGA,GAZA;AAaA,EAAA,OAAA,EAAA;AACA,IAAA,SADA,uBACA;AACA,WAAA,KAAA,CAAA,UAAA,EAAA,IAAA;AACA,KAHA;AAIA,IAAA,SAJA,uBAIA;AACA,WAAA,KAAA,CAAA,UAAA,EAAA,IAAA;AACA,KANA;AAOA,IAAA,WAPA,yBAOA;AACA;AACA;AACA,WAAA,KAAA,CAAA,UAAA,EAAA,MAAA,CAAA,aAAA;AACA,KAXA;AAYA,IAAA,gBAAA,EAAA,0BAAA,MAAA,EAAA,GAAA,EAAA;AACA,WAAA,aAAA,GAAA,MAAA,CAAA,QAAA;AACA,WAAA,WAAA,CAAA,OAAA,GAAA,MAAA,CAAA,QAAA;;AACA,UAAA,KAAA,WAAA,IAAA,GAAA,EAAA;AACA,aAAA,WAAA,GAAA,CAAA,KAAA,WAAA;AACA,OAFA,MAGA;AACA,aAAA,WAAA,GAAA,IAAA;AACA,aAAA,WAAA,GAAA,GAAA;AACA;AACA;AAtBA;AAbA,CAAA","sourcesContent":["<template>\r\n  <div class=\"display\">\r\n\r\n  <b-modal centered title=\"BootstrapVue\" hide-header no-close-on-backdrop=\"true\" hide-footer ref=\"my-modal\" id=\"my-modal\">{{this.msg}}\r\n      <b-button class=\"mt-3\" variant=\"outline-danger\" block @click=\"hideModal\">Ok</b-button>\r\n  </b-modal>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n\r\n<script>\r\n\r\n\r\nexport default {\r\n  name: \"display\",\r\n  components: {},\r\n  props: {\r\n    msg: String,\r\n    reload: Boolean\r\n    },\r\n  data() {\r\n    \r\n    return {\r\n      oui: \"oui\"\r\n    }\r\n  },\r\n  methods: {\r\n    showModal() {\r\n        this.$refs['my-modal'].show()\r\n      },\r\n      hideModal() {\r\n        this.$refs['my-modal'].hide()\r\n      },\r\n      toggleModal() {\r\n        // We pass the ID of the button that we want to return focus to\r\n        // when the modal has hidden\r\n        this.$refs['my-modal'].toggle('#toggle-btn')\r\n      },\r\ntoggleInfoWindow: function(marker, idx) {\r\n    this.infoWindowPos = marker.position;\r\n    this.infoOptions.content = marker.infoText;\r\n    if (this.currentMidx == idx) {\r\n      this.infoWinOpen = !this.infoWinOpen;\r\n    }\r\n    else {\r\n      this.infoWinOpen = true;\r\n      this.currentMidx = idx;\r\n    }\r\n  }\r\n  }\r\n}\r\n</script>"],"sourceRoot":"src/components"}]}