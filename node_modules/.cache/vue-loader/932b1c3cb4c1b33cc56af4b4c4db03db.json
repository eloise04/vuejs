{"remainingRequest":"C:\\Users\\Eloïse\\Documents\\Projet 2019-2020\\vuejsdashboard\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Eloïse\\Documents\\Projet 2019-2020\\vuejsdashboard\\src\\components\\MyModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Eloïse\\Documents\\Projet 2019-2020\\vuejsdashboard\\src\\components\\MyModal.vue","mtime":1578422094384},{"path":"C:\\Users\\Eloïse\\Documents\\Projet 2019-2020\\vuejsdashboard\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Eloïse\\Documents\\Projet 2019-2020\\vuejsdashboard\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Eloïse\\Documents\\Projet 2019-2020\\vuejsdashboard\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Eloïse\\Documents\\Projet 2019-2020\\vuejsdashboard\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\n\r\n\r\nexport default {\r\n  name: \"display\",\r\n  components: {},\r\n  props: {\r\n    msg: String,\r\n    reload: Boolean\r\n    },\r\n  data() {\r\n    \r\n    return {\r\n      oui: \"oui\"\r\n    }\r\n  },\r\n  methods: {\r\n    showModal() {\r\n        this.$refs['my-modal'].show()\r\n      },\r\n      hideModal() {\r\n        this.$refs['my-modal'].hide()\r\n      },\r\n      toggleModal() {\r\n        // We pass the ID of the button that we want to return focus to\r\n        // when the modal has hidden\r\n        this.$refs['my-modal'].toggle('#toggle-btn')\r\n      },\r\ntoggleInfoWindow: function(marker, idx) {\r\n    this.infoWindowPos = marker.position;\r\n    this.infoOptions.content = marker.infoText;\r\n    if (this.currentMidx == idx) {\r\n      this.infoWinOpen = !this.infoWinOpen;\r\n    }\r\n    else {\r\n      this.infoWinOpen = true;\r\n      this.currentMidx = idx;\r\n    }\r\n  }\r\n  }\r\n}\r\n",{"version":3,"sources":["MyModal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"MyModal.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div class=\"display\">\r\n\r\n  <b-modal centered title=\"BootstrapVue\" hide-header no-close-on-backdrop=\"true\" hide-footer ref=\"my-modal\" id=\"my-modal\">{{this.msg}}\r\n      <b-button class=\"mt-3\" variant=\"outline-danger\" block @click=\"hideModal\">Ok</b-button>\r\n  </b-modal>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n\r\n<script>\r\n\r\n\r\nexport default {\r\n  name: \"display\",\r\n  components: {},\r\n  props: {\r\n    msg: String,\r\n    reload: Boolean\r\n    },\r\n  data() {\r\n    \r\n    return {\r\n      oui: \"oui\"\r\n    }\r\n  },\r\n  methods: {\r\n    showModal() {\r\n        this.$refs['my-modal'].show()\r\n      },\r\n      hideModal() {\r\n        this.$refs['my-modal'].hide()\r\n      },\r\n      toggleModal() {\r\n        // We pass the ID of the button that we want to return focus to\r\n        // when the modal has hidden\r\n        this.$refs['my-modal'].toggle('#toggle-btn')\r\n      },\r\ntoggleInfoWindow: function(marker, idx) {\r\n    this.infoWindowPos = marker.position;\r\n    this.infoOptions.content = marker.infoText;\r\n    if (this.currentMidx == idx) {\r\n      this.infoWinOpen = !this.infoWinOpen;\r\n    }\r\n    else {\r\n      this.infoWinOpen = true;\r\n      this.currentMidx = idx;\r\n    }\r\n  }\r\n  }\r\n}\r\n</script>"]}]}